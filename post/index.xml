<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 二三的博客</title>
    <link>/post/</link>
    <description>Recent content in Posts on 二三的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>idersan@outlook.com (二三)</managingEditor>
    <webMaster>idersan@outlook.com (二三)</webMaster>
    <copyright>(c) 2017 Copyright 二三</copyright>
    <lastBuildDate>Mon, 08 May 2017 21:38:01 +0800</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/2017/05/08/getting-started-with-hugo/</link>
      <pubDate>Mon, 08 May 2017 21:38:01 +0800</pubDate>
      <author>idersan@outlook.com (二三)</author>
      <guid>/2017/05/08/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>how to use hexo build a blog</title>
      <link>/2017/05/08/how-to-use-hexo-build-a-blog/</link>
      <pubDate>Mon, 08 May 2017 21:37:26 +0800</pubDate>
      <author>idersan@outlook.com (二三)</author>
      <guid>/2017/05/08/how-to-use-hexo-build-a-blog/</guid>
      <description>hexo 博客在windows 10下快速搭建步骤：
0x1 安装tortoisegit。  1.1 新建Repository yourname.github.io 1.2 开通 page 服务。 1.3 本地新建index.html(hello world) push到username.github.io
 &amp;lt;!DOCTYPE HTML&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;yourname&#39;s Blog&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;I&#39;m hosted with GitHub Paes&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  1.4 访问yourname.github.io 可以看到helloworld。 - [ ] 112 - [x] 233
 0x2 安装nodejs  2.1 http://nodejs.org 下载安装文件，点击安装。 2.2 配置npm的全局模块的存放路径以及cache的路:
 $ npm config set prefix &amp;quot;C:\Program Files\nodejs\node_global&amp;quot; $ npm config set cache &amp;quot;C:\Program Files\nodejs\node_cache&amp;quot;  2.</description>
    </item>
    
    <item>
      <title>What is Hugo?</title>
      <link>/2016/04/24/what-is-hugo/</link>
      <pubDate>Sun, 24 Apr 2016 02:50:28 +0200</pubDate>
      <author>idersan@outlook.com (二三)</author>
      <guid>/2016/04/24/what-is-hugo/</guid>
      <description>Hugo is a general-purpose website framework. Technically speaking, Hugo is a static site generator. Unlike other systems which dynamically build a page every time a visitor requests one, Hugo does the building when you create your content. Since websites are viewed far more often than they are edited, Hugo is optimized for website viewing while providing a great writing experience.
Sites built with Hugo are extremely fast and very secure.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/2016/04/21/introduction/</link>
      <pubDate>Thu, 21 Apr 2016 02:50:28 +0200</pubDate>
      <author>idersan@outlook.com (二三)</author>
      <guid>/2016/04/21/introduction/</guid>
      <description>Hugo is written in Go with support for multiple platforms.
The latest release can be found at Hugo Releases. We currently provide pre-built binaries for &amp;nbsp;Windows, &amp;nbsp;Linux, &amp;nbsp;FreeBSD and &amp;nbsp;OS&amp;nbsp;X (Darwin) for x64, i386 and ARM architectures.
Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for other operating systems including DragonFly BSD, OpenBSD, Plan&amp;nbsp;9 and Solaris. See http://golang.org/doc/install/source for the full set of supported combinations of target operating systems and compilation architectures.</description>
    </item>
    
  </channel>
</rss>